[{"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\index.js":"1","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\Navbar\\index.js":"2","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Movies\\index.js":"3","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Errors\\404\\NotFound.jsx":"4","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Home\\Home.jsx":"5","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\api.js":"6","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\Loading.jsx":"7","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\reportWebVitals.js":"8","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\App.js":"9","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\MoviesList\\MoviesList.jsx":"10","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Errors\\404\\index.js":"11","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Popular\\Popular.jsx":"12","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\Navbar\\Navbar.jsx":"13","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Movies\\Movies.jsx":"14","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\MoreViews\\MoreViews.jsx":"15","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Search\\Search.jsx":"16","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\Footer\\Footer.jsx":"17","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\NewMovies\\index.js":"18","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Home\\index.js":"19","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\Footer\\index.js":"20","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\NewMovies\\NewMovies.jsx":"21","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Search\\index.js":"22","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Popular\\index.js":"23","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\MoreViews\\index.js":"24","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\MoviesList\\index.js":"25"},{"size":500,"mtime":1610074022524,"results":"26","hashOfConfig":"27"},{"size":35,"mtime":1610165820520,"results":"28","hashOfConfig":"27"},{"size":35,"mtime":1610164639603,"results":"29","hashOfConfig":"27"},{"size":448,"mtime":1610680504046,"results":"30","hashOfConfig":"27"},{"size":2937,"mtime":1610507177136,"results":"31","hashOfConfig":"27"},{"size":110,"mtime":1610236234030,"results":"32","hashOfConfig":"27"},{"size":826,"mtime":1610231138331,"results":"33","hashOfConfig":"27"},{"size":362,"mtime":1610074022524,"results":"34","hashOfConfig":"27"},{"size":1057,"mtime":1610505350001,"results":"35","hashOfConfig":"27"},{"size":3108,"mtime":1610596020945,"results":"36","hashOfConfig":"27"},{"size":39,"mtime":1610164447659,"results":"37","hashOfConfig":"27"},{"size":3590,"mtime":1610675331248,"results":"38","hashOfConfig":"27"},{"size":3362,"mtime":1610680647015,"results":"39","hashOfConfig":"27"},{"size":5331,"mtime":1610841771033,"results":"40","hashOfConfig":"27"},{"size":3626,"mtime":1610821387594,"results":"41","hashOfConfig":"27"},{"size":4791,"mtime":1610679293636,"results":"42","hashOfConfig":"27"},{"size":1986,"mtime":1610509370590,"results":"43","hashOfConfig":"27"},{"size":38,"mtime":1610164752503,"results":"44","hashOfConfig":"27"},{"size":33,"mtime":1610075521603,"results":"45","hashOfConfig":"27"},{"size":37,"mtime":1610507030354,"results":"46","hashOfConfig":"27"},{"size":3612,"mtime":1610593206903,"results":"47","hashOfConfig":"27"},{"size":35,"mtime":1610164937246,"results":"48","hashOfConfig":"27"},{"size":36,"mtime":1610164841535,"results":"49","hashOfConfig":"27"},{"size":38,"mtime":1610505256603,"results":"50","hashOfConfig":"27"},{"size":41,"mtime":1610418902335,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1cl6aqc",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\index.js",[],["116","117"],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\Navbar\\index.js",[],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Movies\\index.js",[],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Errors\\404\\NotFound.jsx",["118"],"import React from \"react\";\r\nimport \"./NotFound.scss\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"notFound\">\r\n      <img src=\"/img/notFound.gif\" alt=\"Not found\" />\r\n      <Link to={{pathname: '/'}} style={{textDecoration:'none'}}>\r\n        <Button color=\"inherit\" variant=\"outlined\">Ll√©vame a casa</Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Home\\Home.jsx",["119","120"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.scss\";\r\nimport axios from \"axios\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { URL_API, API } from \"../../components/api\";\r\nimport Loading from \"../../components/Loading\";\r\nimport MoviesList from \"../../components/MoviesList\";\r\nimport Footer from \"../../components/Footer\";\r\n\r\nexport default () => {\r\n  const [dataNewMovies, setdataNewMovies] = useState([]);\r\n  const [dataPopularMovies, setDataPopularMovies] = useState([]);\r\n  const [dataTopMovies, setDataTopMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const newMovies = async () => {\r\n    await axios\r\n      .get(`${URL_API}/movie/now_playing?api_key=${API}&language=es-ES&page=1`)\r\n      .then((response) => {\r\n        setdataNewMovies(response.data.results);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const popularMovies = async () => {\r\n    await axios\r\n      .get(`${URL_API}/movie/popular?api_key=${API}&language=es-ES&page=1`)\r\n      .then((response) => {\r\n        setDataPopularMovies(response.data.results);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const topMovies = async () => {\r\n    await axios\r\n      .get(`${URL_API}/movie/top_rated?api_key=${API}&language=es-ES&page=1`)\r\n      .then((response) => {\r\n        setDataTopMovies(response.data.results);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    newMovies();\r\n    popularMovies();\r\n    topMovies();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Carousel className=\"carusel\" interval={7500}>\r\n        {dataNewMovies.map((item, i) => (\r\n          <>\r\n            <div\r\n              className=\"carusel__image\"\r\n              style={{\r\n                backgroundImage: `url('https://image.tmdb.org/t/p/original${item.backdrop_path}')`,\r\n              }}\r\n            >\r\n              <div className=\"carusel__content\">\r\n                <div className=\"carusel__content-description\">\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/original${item.poster_path}`}\r\n                  />\r\n                  <div className=\"descripcion\">\r\n                    <h2>{item.title}</h2>\r\n                    <p>{item.overview}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ))}\r\n      </Carousel>\r\n      <MoviesList titulo=\"Mas vistas\" moviesData={dataTopMovies.slice(0,6)} link=\"/mas/vistas\"/>\r\n      <MoviesList titulo=\"Nuevas\" moviesData={dataNewMovies.slice(0,6)} link=\"/new/movies\"/>\r\n      <MoviesList titulo=\"Populares\" moviesData={dataPopularMovies.slice(0,6)} link=\"/popular\"/>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\api.js",[],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\Loading.jsx",["121"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  top: {\r\n    animationDuration: \"550ms\",\r\n  },\r\n  container_loading: {\r\n    height: '100vh',\r\n    width: '100%',\r\n    display: 'flex',\r\n    position: 'fixed',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    justifyItems: 'center',\r\n  }\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container_loading}>\r\n      <CircularProgress\r\n        variant=\"indeterminate\"\r\n        disableShrink\r\n        className={classes.top}\r\n        size={100}\r\n        thickness={2}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\reportWebVitals.js",[],["122","123"],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\App.js",["124"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./views/Home\";\nimport Error404 from \"./views/Errors/404\";\nimport Movie from \"./views/Movies\";\nimport NewMovies from \"./views/NewMovies\";\nimport Popular from \"./views/Popular\";\nimport MoreViews from \"./views/MoreViews\";\n\nexport default () => {\n  return (\n    <Router>\n      <Navbar />\n      <section>\n        <Switch>\n          <Route path=\"/\" exact={true}>\n            <Home />\n          </Route>\n          <Route path=\"/new/movies\" exact={true}>\n            <NewMovies />\n          </Route>\n          <Route path=\"/mas/vistas\" exact={true}>\n            <MoreViews />\n          </Route>\n          <Route path=\"/popular\" exact={true}>\n            <Popular />\n          </Route>\n          <Route path=\"/movie/:id\" exact={true}>\n            <Movie />\n          </Route>\n          <Route path=\"*\">\n            <Error404 />\n          </Route>\n        </Switch>\n      </section>\n    </Router>\n  );\n};\n",["125","126"],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\MoviesList\\MoviesList.jsx",["127","128"],"import react from \"react\";\r\nimport \"./MoviesList.scss\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Chip,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BrightnessMediumIcon from \"@material-ui/icons/BrightnessMedium\";\r\nimport Loading from \"../../components/Loading\";\r\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\r\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport moment from 'moment';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nexport default (props) => {\r\n  const { titulo, moviesData, link } = props;\r\n  return (\r\n    <>\r\n      <Typography className=\"title__popular\" variant=\"h4\">\r\n        {titulo} <BrightnessMediumIcon />\r\n      </Typography>\r\n      <Grid container spacing={1} className=\"maxWidth\">\r\n        {moviesData ? (\r\n          moviesData.map((event) => (\r\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={2}>\r\n              <Card>\r\n                <Link className=\"lista\" to={{ pathname: `/movie/${event.id}` }}>\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      className=\"image\"\r\n                      image={`https://image.tmdb.org/t/p/original${event.poster_path}`}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {event.title}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        <Chip\r\n                          className=\"chip\"\r\n                          icon={<AcUnitIcon />}\r\n                          label={`${event.vote_count} votos`}\r\n                          size=\"small\"\r\n                        />\r\n                        <Chip\r\n                          className=\"chip\"\r\n                          icon={<PlayCircleFilledWhiteIcon />}\r\n                          label={`Publicaci√≥n: ${moment(event.release_date).format('MM/YY')}`}\r\n                          size=\"small\"\r\n                        />\r\n                        <Chip\r\n                          className=\"chip\"\r\n                          icon={<StarIcon />}\r\n                          label={`${event.popularity} vistas`}\r\n                          size=\"small\"\r\n                        />\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n\r\n        <Grid item xs={12} align=\"center\">\r\n          <Link to={{pathname:`${link}`}} style={{textDecoration:'none'}}>\r\n            <Button color=\"inherit\" variant=\"outlined\">\r\n              Ver mas <MoreHorizIcon/>\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Errors\\404\\index.js",[],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Popular\\Popular.jsx",["129","130"],"import React, {useState, useEffect} from 'react';\r\nimport \"./Popular.scss\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Chip,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BrightnessMediumIcon from \"@material-ui/icons/BrightnessMedium\";\r\nimport Loading from \"../../components/Loading\";\r\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\r\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport moment from \"moment\";\r\nimport Footer from \"../../components/Footer\";\r\nimport axios from \"axios\";\r\nimport { URL_API, API } from \"../../components/api\";\r\n\r\nexport default () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const newMovies = async () => {\r\n    await axios\r\n      .get(`${URL_API}/movie/popular?api_key=${API}&language=es-ES&page=1`)\r\n      .then((response) => {\r\n        setData(response.data.results.reverse());\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    newMovies();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        className=\"maxWidth\"\r\n        style={{ paddingTop: 50 }}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Typography className=\"title__popular\" variant=\"h4\">\r\n            pel√≠culas populares <BrightnessMediumIcon />\r\n          </Typography>\r\n        </Grid>\r\n        {data ? (\r\n          data.map((event) => (\r\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={2}>\r\n              <Card>\r\n                <Link className=\"lista\" to={{ pathname: `/movie/${event.id}` }}>\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      className=\"image\"\r\n                      image={`https://image.tmdb.org/t/p/original${event.poster_path}`}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {event.title}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        <Chip\r\n                          className=\"chip\"\r\n                          icon={<AcUnitIcon />}\r\n                          label={`${event.vote_count} votos`}\r\n                          size=\"small\"\r\n                        />\r\n                        <Chip\r\n                          className=\"chip\"\r\n                          icon={<PlayCircleFilledWhiteIcon />}\r\n                          label={`Publicaci√≥n: ${moment(\r\n                            event.release_date\r\n                          ).format(\"MM/YY\")}`}\r\n                          size=\"small\"\r\n                        />\r\n                        <Chip\r\n                          className=\"chip\"\r\n                          icon={<StarIcon />}\r\n                          label={`${event.popularity} vistas`}\r\n                          size=\"small\"\r\n                        />\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </Grid>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\Navbar\\Navbar.jsx",["131","132","133","134","135"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport MovieFilterIcon from \"@material-ui/icons/MovieFilter\";\r\nimport GroupWorkIcon from \"@material-ui/icons/GroupWork\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Search from \"../../views/Search\";\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport \"./NavBar.scss\";\r\n\r\nexport default () => {\r\n  const [activeBtn, setActiveBtn] = useState(\"\");\r\n  const [visibleMenuOpen, setvisibleMenuOpen] = useState(\"\");\r\n  const [visibleDialogSearch, setVisibleDialogSearch] = useState(false);\r\n\r\n  const visibleMenu = () => {\r\n    if (activeBtn == \"active_btn\" || visibleMenuOpen == \"active\") {\r\n      setActiveBtn(\"\");\r\n      setvisibleMenuOpen(\"\");\r\n    } else {\r\n      setActiveBtn(\"active_btn\");\r\n      setvisibleMenuOpen(\"active\");\r\n    }\r\n  };\r\n  const closeMenu = () => {\r\n    setActiveBtn(\"\");\r\n    setvisibleMenuOpen(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {visibleDialogSearch && (\r\n        <Search\r\n          visible={visibleDialogSearch}\r\n          setVisible={setVisibleDialogSearch}\r\n        />\r\n      )}\r\n\r\n      <header>\r\n        <div className={`menu ${activeBtn}`} onClick={() => visibleMenu()}>\r\n          <div className=\"menu__lineTop\"></div>\r\n          <div className=\"menu__lineCenter\"></div>\r\n          <div className=\"menu__lineBottom\"></div>\r\n        </div>\r\n        <nav>\r\n          <div className=\"logo\">\r\n            <img\r\n              src=\"https://allpeliculas.mx/wp-content/uploads/2020/10/logo2-300x63-1.png\"\r\n              height=\"100%\"\r\n            />\r\n          </div>\r\n          <div className={`links ${visibleMenuOpen}`}>\r\n            <Link to={{ pathname: \"/\" }} className=\"links__link\">\r\n              <Button variant=\"inherit\" onClick={() => closeMenu()}>\r\n                <AppsIcon style={{ fontSize: 30, marginRight: 7 }} /> Home\r\n              </Button>\r\n            </Link>\r\n            <Link to={{ pathname: \"/mas/vistas\" }} className=\"links__link\">\r\n              <Button variant=\"inherit\" onClick={() => closeMenu()}>\r\n                <NewReleasesIcon style={{ fontSize: 30, marginRight: 7 }} /> Mas vistas\r\n              </Button>\r\n            </Link>\r\n            <Link to={{ pathname: \"/new/movies\" }} className=\"links__link\">\r\n              <Button variant=\"inherit\" onClick={() => closeMenu()}>\r\n                <MovieFilterIcon style={{ fontSize: 30, marginRight: 7 }} />{\" \"}\r\n                Nuevas\r\n              </Button>\r\n            </Link>\r\n            <Link to={{ pathname: \"/popular\" }} className=\"links__link\">\r\n              <Button variant=\"inherit\" onClick={() => closeMenu()}>\r\n                <GroupWorkIcon style={{ fontSize: 30, marginRight: 7 }} />{\" \"}\r\n                Popular\r\n              </Button>\r\n            </Link>\r\n            <Link className=\"links__link\">\r\n              <Button\r\n                variant=\"inherit\"\r\n                onClick={() => {\r\n                  closeMenu();\r\n                  setVisibleDialogSearch(true);\r\n                }}\r\n              >\r\n                <SearchIcon style={{ fontSize: 30, marginRight: 7 }} /> Buscar\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Movies\\Movies.jsx",["136","137","138","139","140"],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\MoreViews\\MoreViews.jsx",["141"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./MoreViews.scss\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BrightnessMediumIcon from \"@material-ui/icons/BrightnessMedium\";\r\nimport Loading from \"../../components/Loading\";\r\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\r\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport moment from \"moment\";\r\nimport Footer from \"../../components/Footer\";\r\nimport axios from \"axios\";\r\nimport { URL_API, API } from \"../../components/api\";\r\n\r\nexport default () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const topMovies = async () => {\r\n    await axios\r\n      .get(`${URL_API}/movie/top_rated?api_key=${API}&language=es-ES&page=1`)\r\n      .then((response) => {\r\n        setData(response.data.results.reverse());\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  console.log(data);\r\n\r\n  useEffect(() => {\r\n    topMovies();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        className=\"maxWidth\"\r\n        style={{ paddingTop: 50 }}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Typography className=\"title__popular\" variant=\"h4\">\r\n            Pel√≠culas con mayor cantidad de vistas <BrightnessMediumIcon />\r\n          </Typography>\r\n        </Grid>\r\n        {data ? (\r\n          data.map((event) => (\r\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={2}>\r\n              <Card>\r\n                <Link className=\"lista\" to={{ pathname: `/movie/${event.id}` }}>\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      className=\"image\"\r\n                      image={`https://image.tmdb.org/t/p/original${event.poster_path}`}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {event.title}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        <Chip\r\n                          className=\"chip\"\r\n                          icon={<AcUnitIcon />}\r\n                          label={`${event.vote_count} votos`}\r\n                          size=\"small\"\r\n                        />\r\n                        <Chip\r\n                          className=\"chip\"\r\n                          icon={<PlayCircleFilledWhiteIcon />}\r\n                          label={`Publicaci√≥n: ${moment(\r\n                            event.release_date\r\n                          ).format(\"MM/YY\")}`}\r\n                          size=\"small\"\r\n                        />\r\n                        <Chip\r\n                          className=\"chip\"\r\n                          icon={<StarIcon />}\r\n                          label={`${event.popularity} vistas`}\r\n                          size=\"small\"\r\n                        />\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </Grid>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Search\\Search.jsx",["142","143","144"],"import React, { useState, useEffect } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport {\r\n  FormControl,\r\n  TextField,\r\n  Grid,\r\n  DialogContent,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Chip\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { URL_API, API } from \"../../components/api\";\r\nimport axios from \"axios\";\r\nimport \"./Search.scss\";\r\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\r\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default (props) => {\r\n  const { visible, setVisible } = props;\r\n  const [moviesResult, setMoviesResult] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (searchValue != undefined && searchValue != \"\") {\r\n        await axios\r\n          .get(\r\n            `${URL_API}/search/movie?api_key=${API}&lenguage=es-ES&query=${searchValue}&page=1`\r\n          )\r\n          .then((response) => {\r\n            setMoviesResult(response.data.results);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    })();\r\n  }, [searchValue]);\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullScreen open={visible} TransitionComponent={Transition}>\r\n        <AppBar style={{ backgroundColor: \"#fff\" }}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className=\"titulo\">\r\n              <FormControl className=\"buscador\">\r\n                <TextField\r\n                  autoFocus\r\n                  value={searchValue}\r\n                  onChange={(event) => setSearchValue(event.target.value)}\r\n                  label=\"Buscar...\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </FormControl>\r\n              <span className=\"icon_close\">\r\n                <IconButton\r\n                  edge=\"start\"\r\n                  color=\"inherit\"\r\n                  onClick={() => setVisible(false)}\r\n                  aria-label=\"close\"\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </span>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <DialogContent>\r\n          <Grid container spacing={1} className=\"contenido\">\r\n            {moviesResult.length > 0 ? (\r\n              moviesResult.map((event) => (\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={6}\r\n                  lg={3}\r\n                >\r\n                  <Link\r\n                    to={{ pathname: `/movie/${event.id}` }}\r\n                    style={{ textDecoration: \"none\" }}\r\n                    onClick={() => setVisible(false)}\r\n                  >\r\n                    <Card className=\"root\">\r\n                      <div className=\"details\">\r\n                        <CardContent className=\"content\">\r\n                          <Typography component=\"h5\" variant=\"h5\">\r\n                            {event.title}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                            <Chip\r\n                              className=\"chip\"\r\n                              icon={<AcUnitIcon />}\r\n                              label={`${event.vote_count} votos`}\r\n                              size=\"small\"\r\n                            />\r\n                            <Chip\r\n                              className=\"chip\"\r\n                              icon={<PlayCircleFilledWhiteIcon />}\r\n                              label={`Idioma: ${event.original_language}`}\r\n                              size=\"small\"\r\n                            />\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </div>\r\n                      <CardMedia\r\n                        className=\"cover\"\r\n                        image={`https://image.tmdb.org/t/p/original${event.poster_path}`}\r\n                      />\r\n                    </Card>\r\n                  </Link>\r\n                </Grid>\r\n              ))\r\n            ) : (\r\n              <div className=\"empty\">\r\n                <img src=\"/img/animacionvideo.gif\" alt=\"Empty\"/>\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\Footer\\Footer.jsx",["145","146","147","148"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport \"./Footer.scss\";\r\n\r\nexport default () => {\r\n  return (\r\n    <footer>\r\n      <CardContent className=\"footer\">\r\n        <Typography color=\"textSecondary\">\r\n          <Grid container className=\"redes\">\r\n            <IconButton>\r\n              <Link href=\"https://twitter.com/gaordonezh\" target=\"_blank\">\r\n                <TwitterIcon />\r\n              </Link>\r\n            </IconButton>\r\n            <IconButton>\r\n              <Link href=\"https://www.facebook.com/gaordonezh/\" target=\"_blank\">\r\n                <FacebookIcon />\r\n              </Link>\r\n            </IconButton>\r\n            <IconButton>\r\n              <Link href=\"https://www.instagram.com/gaordonezh/\" target=\"_blank\">\r\n                <InstagramIcon />\r\n              </Link>\r\n            </IconButton>\r\n            <IconButton>\r\n              <Link href=\"https://github.com/gaordonezh\" target=\"_blank\">\r\n                <GitHubIcon />\r\n              </Link>\r\n            </IconButton>\r\n            <IconButton>\r\n              <Link href=\"https://api.whatsapp.com/send?phone=51902046246&text=hola\" target=\"_blank\">\r\n                <WhatsAppIcon />\r\n              </Link>\r\n            </IconButton>\r\n            <IconButton>\r\n              <Link href=\"https://aldo.codes\" target=\"_blank\">\r\n                <LanguageIcon />\r\n              </Link>\r\n            </IconButton>\r\n          </Grid>\r\n        </Typography>\r\n      </CardContent>\r\n    </footer>\r\n  );\r\n};\r\n","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\NewMovies\\index.js",[],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Home\\index.js",[],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\Footer\\index.js",[],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\NewMovies\\NewMovies.jsx",["149","150"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./NewMovies.scss\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Chip,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BrightnessMediumIcon from \"@material-ui/icons/BrightnessMedium\";\r\nimport Loading from \"../../components/Loading\";\r\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\r\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport moment from \"moment\";\r\nimport Footer from \"../../components/Footer\";\r\nimport axios from \"axios\";\r\nimport { URL_API, API } from \"../../components/api\";\r\n\r\nexport default () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const newMovies = async () => {\r\n    await axios\r\n      .get(`${URL_API}/movie/now_playing?api_key=${API}&language=es-ES&page=1`)\r\n      .then((response) => {\r\n        setData(response.data.results.reverse());\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  console.log(data);\r\n\r\n  useEffect(() => {\r\n    newMovies();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        className=\"maxWidth\"\r\n        style={{ paddingTop: 50 }}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Typography className=\"title__popular\" variant=\"h4\">\r\n            Lo mas nuevo <BrightnessMediumIcon />\r\n          </Typography>\r\n        </Grid>\r\n        {data ? (\r\n          data.map((event) => (\r\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={2}>\r\n              <Card>\r\n                <Link className=\"lista\" to={{ pathname: `/movie/${event.id}` }}>\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      className=\"image\"\r\n                      image={`https://image.tmdb.org/t/p/original${event.poster_path}`}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {event.title}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        <Chip\r\n                          className=\"chip\"\r\n                          icon={<AcUnitIcon />}\r\n                          label={`${event.vote_count} votos`}\r\n                          size=\"small\"\r\n                        />\r\n                        <Chip\r\n                          className=\"chip\"\r\n                          icon={<PlayCircleFilledWhiteIcon />}\r\n                          label={`Publicaci√≥n: ${moment(\r\n                            event.release_date\r\n                          ).format(\"MM/YY\")}`}\r\n                          size=\"small\"\r\n                        />\r\n                        <Chip\r\n                          className=\"chip\"\r\n                          icon={<StarIcon />}\r\n                          label={`${event.popularity} vistas`}\r\n                          size=\"small\"\r\n                        />\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </Grid>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n","C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Search\\index.js",[],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\Popular\\index.js",[],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\views\\MoreViews\\index.js",[],"C:\\wamp64\\www\\web\\React\\trailer-films\\src\\components\\MoviesList\\index.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":6,"column":1,"nodeType":"157","endLine":15,"endColumn":3},{"ruleId":"155","severity":1,"message":"156","line":10,"column":1,"nodeType":"157","endLine":94,"endColumn":3},{"ruleId":"158","severity":1,"message":"159","line":75,"column":19,"nodeType":"160","endLine":77,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":22,"column":1,"nodeType":"157","endLine":36,"endColumn":3},{"ruleId":"151","replacedBy":"161"},{"ruleId":"153","replacedBy":"162"},{"ruleId":"155","severity":1,"message":"156","line":11,"column":1,"nodeType":"157","endLine":39,"endColumn":3},{"ruleId":"151","replacedBy":"163"},{"ruleId":"153","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":22,"column":1,"nodeType":"157","endLine":88,"endColumn":3},{"ruleId":"165","severity":1,"message":"169","line":11,"column":3,"nodeType":"167","messageId":"168","endLine":11,"endColumn":9},{"ruleId":"155","severity":1,"message":"156","line":24,"column":1,"nodeType":"157","endLine":114,"endColumn":3},{"ruleId":"165","severity":1,"message":"170","line":1,"column":27,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"156","line":12,"column":1,"nodeType":"157","endLine":92,"endColumn":3},{"ruleId":"171","severity":1,"message":"172","line":18,"column":19,"nodeType":"173","messageId":"174","endLine":18,"endColumn":21},{"ruleId":"171","severity":1,"message":"172","line":18,"column":54,"nodeType":"173","messageId":"174","endLine":18,"endColumn":56},{"ruleId":"158","severity":1,"message":"159","line":48,"column":13,"nodeType":"160","endLine":51,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":30,"column":1,"nodeType":"157","endLine":141,"endColumn":3},{"ruleId":"175","severity":1,"message":"176","line":49,"column":6,"nodeType":"177","endLine":49,"endColumn":8,"suggestions":"178"},{"ruleId":"175","severity":1,"message":"179","line":161,"column":6,"nodeType":"177","endLine":161,"endColumn":8,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":170,"column":9,"nodeType":"160","endLine":180,"endColumn":11},{"ruleId":"171","severity":1,"message":"172","line":173,"column":28,"nodeType":"173","messageId":"174","endLine":173,"endColumn":30},{"ruleId":"155","severity":1,"message":"156","line":23,"column":1,"nodeType":"157","endLine":114,"endColumn":3},{"ruleId":"155","severity":1,"message":"156","line":29,"column":1,"nodeType":"157","endLine":135,"endColumn":3},{"ruleId":"171","severity":1,"message":"183","line":36,"column":23,"nodeType":"173","messageId":"174","endLine":36,"endColumn":25},{"ruleId":"171","severity":1,"message":"183","line":36,"column":51,"nodeType":"173","messageId":"174","endLine":36,"endColumn":53},{"ruleId":"165","severity":1,"message":"184","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"170","line":1,"column":27,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"165","severity":1,"message":"185","line":11,"column":8,"nodeType":"167","messageId":"168","endLine":11,"endColumn":19},{"ruleId":"155","severity":1,"message":"156","line":18,"column":1,"nodeType":"157","endLine":59,"endColumn":3},{"ruleId":"165","severity":1,"message":"169","line":11,"column":3,"nodeType":"167","messageId":"168","endLine":11,"endColumn":9},{"ruleId":"155","severity":1,"message":"156","line":24,"column":1,"nodeType":"157","endLine":115,"endColumn":3},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["186"],["187"],["186"],["187"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMovie'. Either include it or remove the dependency array.","ArrayExpression",["188"],"React Hook useEffect has a missing dependency: 'movieVideo'. Either include it or remove the dependency array.",["189"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'YouTubeIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [getMovie]",{"range":"194","text":"195"},"Update the dependencies array to be: [movieVideo]",{"range":"196","text":"197"},[1245,1247],"[getMovie]",[4679,4681],"[movieVideo]"]